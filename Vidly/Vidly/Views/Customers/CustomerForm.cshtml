@model Vidly.ViewModels.CustomerFormViewModel
@{
    ViewBag.Title = "New";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>New Customer</h2>

@*--The BeginForm method returns a disposible object. If wrapped in using block, at the end of the block, the object returned from the method will be disposed. In the disposed method will render the closing form tag*@
@using (Html.BeginForm("Save", "Customers"))
{
    @Html.ValidationSummary(true, "Please fix the following errors.") @*Pass in true to exclude property errors*@
    <div class="form-group">
        @Html.LabelFor(m => m.Customer.Name)
        @Html.TextBoxFor(m => m.Customer.Name, new { @class = "form-control"}) @*Any properties we add to this anonymous object will be rendered as html attributes*@
        @Html.ValidationMessageFor(m => m.Customer.Name)
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Customer.MembershipTypeId)
        @*<label for="BirthDate">Date of Birth</label>*@ @*Alternative to the label helper method, we can use raw html to achieve this by using "for" attribute*@
        @Html.DropDownListFor(m => m.Customer.MembershipTypeId, new SelectList(Model.MembershipTypes, "Id", "Name"), "Select Membership Type", new { @class = "form-control" }) @*Any properties we add to this anonymous object will be rendered as html attributes*@
        @Html.ValidationMessageFor(m => m.Customer.MembershipTypeId)
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Customer.BirthDate)
        @*<label for="BirthDate">Date of Birth</label>*@ @*Alternative to the label helper method, we can use raw html to achieve this by using "for" attribute*@
        @Html.TextBoxFor(m => m.Customer.BirthDate, "{0:d MMM yyyy}", new { @class = "form-control" }) @*Any properties we add to this anonymous object will be rendered as html attributes*@
        @Html.ValidationMessageFor(m => m.Customer.BirthDate)
    </div>
    <div class="checkbox">
        <label>
            @Html.CheckBoxFor(m => m.Customer.IsSubscribedToNewsLetter) Subscribed to Newsletter?
        </label>
    </div>
    @Html.HiddenFor(m => m.Customer.Id)
    @Html.AntiForgeryToken()
    <button type="submit" class="btn btn-primary">Save</button>
}

@section scripts
{
    @Scripts.Render("~/bundles/jqueryval")
}