@*@model IEnumerable<Vidly.Models.Movie>*@
@model Vidly.ViewModels.MoviesViewModel
@*
    Note: I've set the model for this view to IEnumerable<Customer>.
    This is a simple interface implemented by the list class. Since
    in this view we only want to iterate over this list, and we don't
    need any of the operations in the List class (eg Add, Remove, etc),
    it's better to use the IEnumerable interface, which allows use to
    iterate over the list. If in the future, we replace the List with a
    different data structure, as long as it is enumerable, our view code
    will remain unchanged.
*@
@{
    ViewBag.Title = "Movies";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<h2>Movies</h2>
<p>
    @Html.ActionLink("New Movie", "New", "Movies", null, new { @class = "btn btn-primary" })
</p>
@if (!Model.Movies.Any())
{
    <p>We don't have any movies yet.</p>
}
else
{
    <table id="movies" class="table table-bordered table-hover">
        <thead>
            <tr>
                <th>Movies</th>
                <th>Genre</th>
                <th>Delete</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var movie in Model.Movies)
            {
                <tr>
                    <td>@Html.ActionLink(movie.Name, "Edit", "Movies", new { id = movie.Id }, null)</td>
                    <td>@movie.Genre.Name</td>
                    <td>
                        <button data-movie-id="@movie.Id" class="btn-link js-delete">Delete</button> 
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@section scripts
{
    <script>
        $(document).ready(function () {
            $("#movies").on("click", ".js-delete", function () { //This approach will one have one handler because we only have one item that is attached to this id. js-delete is now a filter as the second argument of the on method
                var button = $(this); //The scope of "this" can change in different call back functions

                bootbox.confirm("Are you sure you want to delete this movie?", function (result) {
                    if (result) {
                        $.ajax({
                            url: "/api/movies/" + button.attr("data-movie-id"),
                            method: "DELETE",
                            success: function () {
                                button.parents("tr").remove();
                                //table.row(button.parents("tr")).remove().draw() //[1]pass reference [2]remove the customer from the internal list maintained by DataTable [3] draw will make customer disappear from the View
                            }
                        });
                    }
                });
            });
        });
    </script>
}